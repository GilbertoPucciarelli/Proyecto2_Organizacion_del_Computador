package Interfaces;

import Clases.Cliente;
import Clases.Pelicula;
import static Interfaces.Principal.listaClientes;
import static Interfaces.Principal.listaPeliculas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Alquilar extends javax.swing.JFrame {

    //VARIABLES
    DefaultTableModel dtm;
    DefaultTableModel dtm2;
    Object[] o = new Object[4];
    Object[] p = new Object[7];
    int filaSeleccionada = -1;
    int filaSeleccionada2 = -1;

    //CONSTRUCTOR
    public Alquilar() {
        initComponents();
        this.setLocationRelativeTo(null); //DESPLIEGA LA INTERFAZ EN EL CENTRO DE LA PANTALLA
        dtm = (DefaultTableModel) jTablaClientes.getModel();
        dtm2 = (DefaultTableModel) jTablaPeliculas.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButtonAlquilar = new javax.swing.JButton();
        jButtonDevolver = new javax.swing.JButton();
        BotonVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaClientes = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaPeliculas = new javax.swing.JTable();
        jButtonCargar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTextFecha = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SimboloUpload.png"))); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SimboloUpload.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ALQUILAR");

        jButtonAlquilar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAlquilar.setText("ALQUILAR");
        jButtonAlquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlquilarActionPerformed(evt);
            }
        });

        jButtonDevolver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDevolver.setText("DEVOLVER");
        jButtonDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverActionPerformed(evt);
            }
        });

        BotonVolver.setText("Volver");
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverActionPerformed(evt);
            }
        });

        jTablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cédula", "ID Película Alquilada", "Fecha Alquiler/Devolución"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablaClientes);

        jTablaPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Género", "Descripción", "Precio", "Rating", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTablaPeliculas);

        jButtonCargar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCargar.setText("CARGAR");
        jButtonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarActionPerformed(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SimboloUpload.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PELÍCULAS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CLIENTES");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Fecha:");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SimboloDevolver.png"))); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SimboloAlquilar.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(237, 237, 237))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(238, 238, 238))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAlquilar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BotonVolver)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAlquilar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDevolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(BotonVolver)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //BOTON VOLVER
    private void BotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverActionPerformed

        this.setVisible(false);
    }//GEN-LAST:event_BotonVolverActionPerformed

    //BOTON CARGAR
    private void jButtonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarActionPerformed

        //CARGAR CLIENTES
        if (!listaClientes.isEmpty()) {

            int cont = 0;
            while (cont < listaClientes.size()) {

                Cliente cliente;
                cliente = (Cliente) listaClientes.get(cont);
                o[0] = cliente.getNombre();
                o[1] = cliente.getCi();
                o[2] = cliente.getID();
                o[3] = cliente.getFecha();
                dtm.addRow(o);
                cont++;

            }
        } else {

            JOptionPane.showMessageDialog(null, "No hay ningun cliente registrado");
        }

        //CARGAR PELÍCULAS
        if (!listaPeliculas.isEmpty()) {

            int cont = 0;
            while (cont < listaPeliculas.size()) {

                Pelicula pelicula;
                pelicula = (Pelicula) listaPeliculas.get(cont);
                p[0] = pelicula.getTitulo();
                p[1] = pelicula.getGenero();
                p[2] = pelicula.getDescripcion();
                p[3] = pelicula.getPrecio();
                p[4] = pelicula.getRating();
                p[5] = pelicula.getStock();
                dtm2.addRow(p);
                cont++;

            }
        } else {

            JOptionPane.showMessageDialog(null, "No hay ninguna película registrada");
        }
    }//GEN-LAST:event_jButtonCargarActionPerformed

    //BOTON ALQUILAR
    private void jButtonAlquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlquilarActionPerformed

        if (!"".equals(jTextFecha.getText())) {
            filaSeleccionada = jTablaClientes.getSelectedRow();
            filaSeleccionada2 = jTablaPeliculas.getSelectedRow();

            if (filaSeleccionada != -1 && filaSeleccionada2 != -1) {

                Cliente c = (Cliente) listaClientes.get(filaSeleccionada);

                if (Integer.parseInt(jTextFecha.getText()) <= 9) {

                    if (c.getID() == 0) {

                        Pelicula p = (Pelicula) listaPeliculas.get(filaSeleccionada2);

                        c.setID(p.getIndice());

                        if (Integer.parseInt(jTextFecha.getText()) == 1) {

                            c.setFecha("03/07 / 04/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 2) {

                            c.setFecha("03/07 / 05/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 3) {

                            c.setFecha("03/07 / 06/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 4) {

                            c.setFecha("03/07 / 07/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 5) {

                            c.setFecha("03/07 / 08/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 6) {

                            c.setFecha("03/07 / 09/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 7) {

                            c.setFecha("03/07 / 10/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 8) {

                            c.setFecha("03/07 / 11/07");
                        }

                        if (Integer.parseInt(jTextFecha.getText()) == 9) {

                            c.setFecha("03/07 / 12/07");
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "El cliente ya tiene una película alquilada");
                    }
                } else {

                    JOptionPane.showMessageDialog(null, "El máximo de días para alquilar una película son 9");
                }

                filaSeleccionada = -1;
                filaSeleccionada2 = -1;
                limpiar();

            } else {
                JOptionPane.showMessageDialog(null, "No ha seleccionado una fila");
            }
        } else {

            JOptionPane.showMessageDialog(null, "Debe llenar todas las casillas de datos");
        }
    }//GEN-LAST:event_jButtonAlquilarActionPerformed

    //BOTON DEVOLVER
    private void jButtonDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverActionPerformed

        filaSeleccionada = jTablaClientes.getSelectedRow();

        if (filaSeleccionada != -1) {

            Cliente c = (Cliente) listaClientes.get(filaSeleccionada);
            c.setFecha("N/A");
            c.setID(0);
            filaSeleccionada = -1;
            limpiar();

        } else {
            JOptionPane.showMessageDialog(null, "No ha seleccionado una fila");
        }
    }//GEN-LAST:event_jButtonDevolverActionPerformed

    //FUNCION QUE BORRA LOS CAMPOS DE TEXTO
    public void limpiar() {

        jTextFecha.setText("");
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alquilar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alquilar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alquilar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alquilar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alquilar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonVolver;
    private javax.swing.JButton jButtonAlquilar;
    private javax.swing.JButton jButtonCargar;
    private javax.swing.JButton jButtonDevolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTablaClientes;
    private javax.swing.JTable jTablaPeliculas;
    private javax.swing.JTextField jTextFecha;
    // End of variables declaration//GEN-END:variables
}
